repos:
  # Schema Gen specific hooks (using our own published hooks)
  # Temporarily disabled until we have actual schemas to validate
  # - repo: local
  #   hooks:
  #     - id: schema-gen-validate
  #       name: Validate generated schemas
  #       entry: uv run schema-gen validate
  #       language: system
  #       pass_filenames: false
  #       files: '\.py$'
  #       stages: [pre-commit]

  - repo: local
    hooks:
      - id: schema-gen-generate
        name: Generate schemas
        entry: uv run schema-gen generate
        language: system
        pass_filenames: false
        files: '(schemas/.*\.py|\.schema-gen\.config\.py)$'

      # Run version compatibility tests
      - id: schema-gen-compatibility
        name: Version compatibility check
        entry: uv run python scripts/check_compatibility.py --current-only
        language: system
        pass_filenames: false
        files: 'src/schema_gen/generators/.*\.py$'
        stages: [pre-push]

  # File and content validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]

  # Python security and quality checks (temporarily disabled)
  # - repo: https://github.com/PyCQA/bandit
  #   rev: 1.8.6
  #   hooks:
  #     - id: bandit
  #       args: ['-r', 'src/', '-ll']
  #       exclude: '^tests/'

  # - repo: https://github.com/adamchainz/blacken-docs
  #   rev: 1.19.1
  #   hooks:
  #     - id: blacken-docs
  #       additional_dependencies: [black>=24.0.0]

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
      - id: pyupgrade
        args: [--py312-plus]

  # Linting and formatting (Ruff replaces Black, isort, and multiple linters)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.0
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/AlexanderDokuchaev/md-dead-link-check
    rev: "v1.2.0"
    hooks:
      - id: md-dead-link-check
        args: ["--warn"]
        files: \.md$

  # Type checking with mypy (temporarily disabled for faster iteration)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.17.1
  #   hooks:
  #     - id: mypy
  #       additional_dependencies:
  #         - pydantic>=2.11.0
  #         - types-PyYAML
  #         - types-requests
  #         - sqlalchemy>=2.0.0
  #       args: [--ignore-missing-imports, --install-types, --non-interactive]

  # Documentation quality (temporarily disabled)
  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       args: [--convention=google, --add-ignore=D100,D101,D102,D103,D104,D105]

  # Test validation (run on push only to avoid slow commits)
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: uv run pytest tests/ --maxfail=1 -q
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-push]
