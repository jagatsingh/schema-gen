name: Version Compatibility Tests

on:
  schedule:
    # Run compatibility tests weekly on Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches: [ main ]
    paths:
      - 'src/schema_gen/generators/**'
      - 'tests/test-matrix.yml'
      - 'tests/test_version_compatibility.py'
      - 'scripts/check_compatibility.py'

jobs:
  compatibility-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Test all generators compatibility
      run: |
        # Test all generators with currently installed versions
        uv run python scripts/check_compatibility.py --library all-generators

    - name: Run version compatibility test suite
      run: |
        # Run the comprehensive compatibility test suite
        uv run pytest tests/test_version_compatibility.py -v

    - name: Validate version matrix configuration
      run: |
        uv run python -c "
        import yaml
        with open('tests/test-matrix.yml', 'r') as f:
            matrix = yaml.safe_load(f)

        # Validate matrix structure
        assert 'version_matrix' in matrix
        assert 'test_scenarios' in matrix

        print('âœ… Version matrix configuration is valid')
        print(f'Libraries tested: {list(matrix[\"version_matrix\"].keys())}')
        "
